buildscript {
    repositories {
//        mavenRepo(url: 'http://jcenter.bintray.com')
        mavenLocal()
    }

    dependencies {
        classpath 'org.jboss.arquillian.gradle:arquillian-gradle-plugin:0.1-jason'
    }
}

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'arquillian'

//try {
//    apply from: profile + '-profile.gradle'
//} catch (Exception e) {
//
//}
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    provided
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

dependencies {
    compile 'javax:javaee-api:7.0'
    compile 'org.webjars:bootstrap:3.0.0'
    compile 'org.webjars:jquery:1.10.2'
    compile 'org.webjars:jquery-ui:1.10.2'
    compile 'com.google.code.gson:gson:2.2.4'

    //compile 'org.richfaces.core:richfaces-core-impl:4.3.1.Final'
    //compile 'org.richfaces.ui:richfaces-components-ui:4.3.1.Final'
    //runtime 'org.atmosphere:atmosphere-runtime:1.0.10'

    testCompile 'junit:junit:4.11'
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.0.3.Final'
}

arquillian {
    debug = true
    deployable = file("$buildDir/libs/frenchpress-${version}.war")

    containers {

        glassfish {
            version = '3.1'
            type = 'remote'
        }

        jetty {
            version = '8'
            type = 'embedded'
            config = ['bindHttpPort': 8085, 'bindAddress': '127.0.0.1', 'jettyPlus': false]

            dependencies {
                adapter 'org.jboss.arquillian.container:arquillian-jetty-embedded-7:1.0.0.CR2'
                container 'org.eclipse.jetty:jetty-webapp:8.1.11.v20130520'
                container group: 'org.eclipse.jetty', name: 'jetty-plus', version: '8.1.11.v20130520'
            }
        }

        //        glassfish {
        //            version = '3.1'
        //            type = 'remote'
        //            dependencies {
        //                adapter 'org.jboss.arquillian.container:arquillian-glassfish-remote-3.1:1.0.0.CR4'
        //            }
        //        }
    }
}

def getCkEditor() {
    if (!file( "src/main/webapp/js/ckeditor").exists() ) {
        ant.get(src: 'http://download.cksource.com/CKEditor/CKEditor/CKEditor%204.2/ckeditor_4.2_standard.zip',
            dest : "$buildDir/dependency-cache/",
            usetimestamp : true,
            verbose:true)
        ant.unzip(src:"$buildDir/dependency-cache/ckeditor_4.2_standard.zip",
            dest: "src/main/webapp/js")
    }
}

task cleanExtra(type: Delete) {
    delete 'src/main/webapp/js/ckeditor'
}

compileJava.doLast {
    getCkEditor()
}

war.doLast {
    ant.unzip(src: war.archivePath, dest: "$buildDir/exploded")
}

clean.dependsOn cleanExtra
